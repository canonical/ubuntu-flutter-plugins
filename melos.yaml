name: ubuntu_flutter_plugins
sdkPath: .fvm/flutter_sdk

packages:
  - packages/**

command:
  bootstrap:
    environment:
      sdk: ">=3.0.0 <4.0.0"
      flutter: ">=3.24.3"

    dependencies:
      collection: ^1.18.0
      flutter_svg: ^2.0.10+1
      intl: ^0.19.0
      meta: ^1.15.0
      path: ^1.9.0

    dev_dependencies:
      mockito: 5.4.4

  publish:
    hooks:
      pre: melos gen-l10n

scripts:
  # analyze all packages
  analyze: >
    melos exec -c 1 -- \
      fvm flutter analyze .

  # build examples in all packages
  build: >
    melos exec -c 1 --fail-fast --flutter --scope="*example*" --dir-exists=linux -- \
      fvm flutter build linux

  # collect coverage information for all packages
  coverage: >
    melos exec -c 1 --fail-fast --dir-exists=test -- \
      fvm flutter test --coverage && melos run coverage:cleanup

  # cleanup generated files from coverage
  coverage:cleanup: >
    melos exec --file-exists=coverage/lcov.info -- \
      lcov --remove coverage/lcov.info '**/*.g.dart' '**/*.freezed.dart' -o coverage/lcov.info

  # format all packages
  format:exclude: >
    find . -name '*.dart' \
      ! -name '*.freezed.dart' \
      ! -name '*.g.dart' \
      ! -name '*.mocks.dart' \
      ! -path '*/l10n/*.dart' \
      ! -name '*.pb*.dart' \
      ! -path '*/.*/*' \
      | xargs fvm dart format --set-exit-if-changed

  # run build_runner to generate code in all packages
  generate: >
    melos exec -c 1 --fail-fast --depends-on=build_runner -- \
      fvm dart run build_runner build --delete-conflicting-outputs

  # run gen-l10n to generate localizations in all packages
  gen-l10n:
    melos exec -c 1 --fail-fast --depends-on=flutter_localizations -- \
     fvm flutter gen-l10n

  # run integration tests in all packages
  integration_test: >
    melos exec -c 1 --dir-exists=integration_test -- \
      fvm flutter test integration_test

  # runs "flutter pub <arg(s)>" in all packages
  pub: melos exec -c 1 -- fvm flutter pub "$@"

  # run tests in all packages
  test: >
    melos exec -c 1 --dir-exists=test -- \
      fvm flutter test

  # run pub upgrade in all packages
  upgrade: melos exec fvm flutter pub upgrade

  # update all goldens files
  update-goldens:
    run: melos exec -- fvm flutter test --update-goldens
    packageFilters:
      dirExists: test
    description: Re-generate all golden test files
